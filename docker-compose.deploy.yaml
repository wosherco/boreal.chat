services:
  boreal.chat:
    image: ghcr.io/wosherco/boreal.chat
    ports:
      - 3000:3000
    environment:
      PUBLIC_ENVIRONMENT: production
      PUBLIC_URL: https://boreal.chat
      GOOGLE_AUTH_CLIENT_ID: ""
      GOOGLE_AUTH_CLIENT_SECRET: ""
      GOOGLE_AUTH_REDIRECT_URI: "https://boreal.chat/auth/google/callback"
      DATABASE_URL: "postgres://postgres:password@postgres:5432/borealchat"
      ELECTRIC_SQL_URL: "http://electric:3000"
      REDIS_URL: "redis://redis:6379"
    volumes:
      - .env:/app/.env

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: borealchat
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - 5432
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command:
      - -c
      - listen_addresses=*
      - -c
      - wal_level=logical
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  electric:
    image: electricsql/electric
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/borealchat?sslmode=disable
      # Not suitable for production. Only use insecure mode in development or if you've otherwise secured the Electric API.
      # See https://electric-sql.com/docs/guides/security
      ELECTRIC_INSECURE: true
    ports:
      - 3000
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - 6379
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio:latest
    ports:
      - 9000
      - 9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_REGION_NAME: us-east-1
      # Webhook notification configuration
      MINIO_NOTIFY_WEBHOOK_ENABLE_primary: "on"
      MINIO_NOTIFY_WEBHOOK_ENDPOINT_primary: "http://boreal.chat:3000/api/webhook/s3"
      MINIO_NOTIFY_WEBHOOK_AUTH_TOKEN_primary: ""
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Configuring MinIO webhook notifications...';
      mc alias set local http://minio:9000 minioadmin minioadmin;
      echo 'Creating bucket if it does not exist...';
      mc mb local/files --ignore-existing;
      echo 'Setting up webhook notification...';
      mc event add local/files arn:minio:sqs::primary:webhook --event put,post;
      echo 'Webhook notification setup complete!';
      echo 'Configuration:';
      echo '- Bucket: files';
      echo '- Webhook: http://boreal.chat:3000/api/webhook/s3';
      echo '- Events: s3:ObjectCreated:Put, s3:ObjectCreated:Post';
      mc event list local/files;
      "
    restart: "no"

volumes:
  postgres-data:
  redis-data:
  minio-data:
