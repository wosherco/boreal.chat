// This file is auto-generated by scripts/fetchModelFeatures.ts.
// Do not edit this file manually.

import type { ModelId } from "./models";

export const GENERATED_AT = "2025-06-30T20:12:30.759Z";

export type ModelFeatures = {
  contextLength: number;
  pricing: {
    prompt: string;
    completion: string;
    image: string;
    web_search: string;
    request: string;
  };
  inputModalities: ("text" | "image" | "audio" | "video" | "file")[];
};

export const MODEL_FEATURES: Partial<Record<ModelId, ModelFeatures>> = {
  "google/gemini-2.5-pro-preview": {
    contextLength: 1048576,
    pricing: {
      prompt: "0.00000125",
      completion: "0.00001",
      image: "0.00516",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["file", "image", "text"],
  },
  "deepseek/deepseek-r1-0528:free": {
    contextLength: 163840,
    pricing: {
      prompt: "0",
      completion: "0",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text"],
  },
  "deepseek/deepseek-r1-0528": {
    contextLength: 128000,
    pricing: {
      prompt: "0.0000005",
      completion: "0.00000215",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text"],
  },
  "anthropic/claude-opus-4": {
    contextLength: 200000,
    pricing: {
      prompt: "0.000015",
      completion: "0.000075",
      image: "0.024",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text"],
  },
  "anthropic/claude-sonnet-4": {
    contextLength: 200000,
    pricing: {
      prompt: "0.000003",
      completion: "0.000015",
      image: "0.0048",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text"],
  },
  "google/gemini-2.5-flash-preview-05-20": {
    contextLength: 1048576,
    pricing: {
      prompt: "0.00000015",
      completion: "0.0000006",
      image: "0.0006192",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text", "file"],
  },
  "qwen/qwen3-30b-a3b": {
    contextLength: 40960,
    pricing: {
      prompt: "0.00000008",
      completion: "0.00000029",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text"],
  },
  "openai/o4-mini-high": {
    contextLength: 200000,
    pricing: {
      prompt: "0.0000011",
      completion: "0.0000044",
      image: "0.0008415",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text", "file"],
  },
  "openai/o4-mini": {
    contextLength: 200000,
    pricing: {
      prompt: "0.0000011",
      completion: "0.0000044",
      image: "0.0008415",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text"],
  },
  "openai/gpt-4.1": {
    contextLength: 1047576,
    pricing: {
      prompt: "0.000002",
      completion: "0.000008",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text", "file"],
  },
  "openai/gpt-4.1-mini": {
    contextLength: 1047576,
    pricing: {
      prompt: "0.0000004",
      completion: "0.0000016",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text", "file"],
  },
  "openai/gpt-4.1-nano": {
    contextLength: 1047576,
    pricing: {
      prompt: "0.0000001",
      completion: "0.0000004",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["image", "text", "file"],
  },
  "x-ai/grok-3-mini-beta": {
    contextLength: 131072,
    pricing: {
      prompt: "0.0000003",
      completion: "0.0000005",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text"],
  },
  "x-ai/grok-3-beta": {
    contextLength: 131072,
    pricing: {
      prompt: "0.000003",
      completion: "0.000015",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text"],
  },
  "meta-llama/llama-4-maverick:free": {
    contextLength: 128000,
    pricing: {
      prompt: "0",
      completion: "0",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image"],
  },
  "meta-llama/llama-4-maverick": {
    contextLength: 1048576,
    pricing: {
      prompt: "0.00000015",
      completion: "0.0000006",
      image: "0.0006684",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image"],
  },
  "meta-llama/llama-4-scout:free": {
    contextLength: 64000,
    pricing: {
      prompt: "0",
      completion: "0",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image"],
  },
  "meta-llama/llama-4-scout": {
    contextLength: 1048576,
    pricing: {
      prompt: "0.00000008",
      completion: "0.0000003",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image"],
  },
  "deepseek/deepseek-chat-v3-0324:free": {
    contextLength: 163840,
    pricing: {
      prompt: "0",
      completion: "0",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text"],
  },
  "deepseek/deepseek-chat-v3-0324": {
    contextLength: 163840,
    pricing: {
      prompt: "0.00000028",
      completion: "0.00000088",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text"],
  },
  "anthropic/claude-3.7-sonnet:thinking": {
    contextLength: 200000,
    pricing: {
      prompt: "0.000003",
      completion: "0.000015",
      image: "0.0048",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image"],
  },
  "google/gemini-2.0-flash-001": {
    contextLength: 1048576,
    pricing: {
      prompt: "0.0000001",
      completion: "0.0000004",
      image: "0.0000258",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image", "file"],
  },
  "google/gemini-2.0-flash-exp:free": {
    contextLength: 1048576,
    pricing: {
      prompt: "0",
      completion: "0",
      image: "0",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image"],
  },
  "anthropic/claude-3.5-sonnet": {
    contextLength: 200000,
    pricing: {
      prompt: "0.000003",
      completion: "0.000015",
      image: "0.0048",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image"],
  },
  "openai/gpt-4o-mini": {
    contextLength: 128000,
    pricing: {
      prompt: "0.00000015",
      completion: "0.0000006",
      image: "0.000217",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image", "file"],
  },
  "openai/gpt-4o": {
    contextLength: 128000,
    pricing: {
      prompt: "0.0000025",
      completion: "0.00001",
      image: "0.003613",
      web_search: "0",
      request: "0",
    },
    inputModalities: ["text", "image", "file"],
  },
};

// Utility functions to replace hardcoded logic from models.ts

/**
 * Known reasoning models and their mappings
 */
const REASONING_MODEL_MAPPINGS: Record<string, string> = {
  "google/gemini-2.5-flash-preview-05-20": "google/gemini-2.5-flash-preview-05-20:thinking",
};

/**
 * Models that support reasoning (either natively or through a variant)
 */
const REASONING_MODELS = [
  "google/gemini-2.5-pro-preview",
  "google/gemini-2.5-flash-preview-05-20",
  "openai/o4-mini",
  "openai/o4-mini-high", 
  "openai/gpt-4.1",
  "openai/gpt-4.1-nano",
  "openai/gpt-4.1-mini",
  "anthropic/claude-opus-4",
  "anthropic/claude-sonnet-4",
  "anthropic/claude-3.7-sonnet:thinking",
  "anthropic/claude-3.5-sonnet",
  "deepseek/deepseek-r1-0528",
  "deepseek/deepseek-r1-0528:free",
  "deepseek/deepseek-chat-v3-0324:free",
  "qwen/qwen3-30b-a3b",
  "x-ai/grok-3-mini-beta",
];

/**
 * Check if a model supports reasoning
 */
export function isReasoningModel(modelId: ModelId): boolean {
  return REASONING_MODELS.indexOf(modelId) !== -1;
}

/**
 * Get the reasoning variant of a model (if it has one)
 */
export function getReasoningModel(modelId: ModelId): string | null {
  return REASONING_MODEL_MAPPINGS[modelId] || null;
}

/**
 * Check if a model is free (based on pricing in MODEL_FEATURES)
 */
export function isFreeModel(modelId: ModelId): boolean {
  const features = MODEL_FEATURES[modelId];
  if (!features) return false;
  
  return (
    features.pricing.prompt === "0" &&
    features.pricing.completion === "0" &&
    features.pricing.image === "0" &&
    features.pricing.web_search === "0" &&
    features.pricing.request === "0"
  );
}
